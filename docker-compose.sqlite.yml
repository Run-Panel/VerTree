version: '3.8'

services:
  vertree-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vertree-sqlite
    ports:
      - "${SERVER_PORT:-8080}:8080"
    env_file:
      - sqlite.env
    volumes:
      - ./uploads:/root/uploads:rw
      - ./data:/root/data:rw
      - ./config:/root/config:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - vertree-network

  # Redis for caching (可选)
  # redis:
  #   image: redis:7-alpine
  #   container_name: vertree-redis
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   restart: unless-stopped
  #   networks:
  #     - vertree-network

  # Nginx反向代理 (可选，用于生产环境)
  # nginx:
  #   image: nginx:alpine
  #   container_name: vertree-nginx
  #   ports:
  #     - "${NGINX_HTTP_PORT:-80}:80"
  #     - "${NGINX_HTTPS_PORT:-443}:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #     - nginx_logs:/var/log/nginx
  #   depends_on:
  #     vertree-app:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   restart: unless-stopped
  #   networks:
  #     - vertree-network
  #   profiles:
  #     - production

volumes:
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  vertree-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
